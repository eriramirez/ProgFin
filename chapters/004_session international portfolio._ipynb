{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Optimization of an International Portfolio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Invalid requirement: \"'pandas_datareader\"\n"
     ]
    }
   ],
   "source": [
    "! pip install 'pandas_datareader>=0.10'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import the necessary libraries \n",
    "from pandas_datareader.data import DataReader\n",
    "from datetime import datetime, timedelta\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from typing import Dict, List\n",
    "import yfinance as yf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2022-10-13 12:39:45.150984\n",
      "2017-10-14 12:39:45.150984\n"
     ]
    }
   ],
   "source": [
    "# Create the formula to get the dates of the last 5 years.\n",
    "def fnct_last_five_years():\n",
    "    five_years = timedelta(days=365*5, )\n",
    "    now = datetime.now()\n",
    "    five_years_ago = now - five_years\n",
    "    return now, five_years_ago\n",
    "\n",
    "now, five_years_ago = fnct_last_five_years()\n",
    "print(now)\n",
    "print(five_years_ago)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fnct_get_ticker_data(ticker: str, data_source: str = \"yahoo\") -> pd.DataFrame:\n",
    "    \"\"\"Get the data in the last 5 years for the specified ticker\"\"\"\n",
    "    print(f'downloading data for {ticker}')\n",
    "    now, five_years_ago = fnct_last_five_years()\n",
    "    ticker_df = DataReader(ticker, data_source, five_years_ago, now)\n",
    "    return ticker_df\n",
    "\n",
    "\n",
    "def fnct_convert_currency(ticker_adj_close:pd.Series, currency:pd.Series) -> pd.Series:\n",
    "    df = pd.DataFrame({\"x\":ticker_adj_close, \"c\":currency})\n",
    "    # drop rows where all columns in subset are NA\n",
    "    df = df.dropna(axis=0, how='all', subset=('x', 'c'))\n",
    "    # fill with the value of the previous date's values\n",
    "    df = df.fillna(method='ffill')\n",
    "    # in case there are empty rows at the beginning, fill with following date's values\n",
    "    df = df.fillna(method='bfill')\n",
    "    return df['x'] * df['c']\n",
    "\n",
    "\n",
    "def fnct_get_currency(*tickers):\n",
    "    \"\"\"obtain the currency for each ticker\"\"\"\n",
    "    currencies = dict()\n",
    "    for ticker in tickers:\n",
    "        t = yf.Ticker(ticker, )\n",
    "        currencies[ticker] = t.info[\"currency\"]\n",
    "    return currencies\n",
    "\n",
    "def fnct_get_currencies_data(currencies:dict):\n",
    "    \"\"\"Use the output of get_currency to read the data for all the currencies once\"\"\"\n",
    "    currencies_data = {}\n",
    "    unique_currencies = set(currencies.values())\n",
    "    ticker_map = {\n",
    "        \"USD\": \"MXN=X\",\n",
    "        \"CAD\": \"CADMXN=X\",\n",
    "        \"EUR\": \"EURMXN=X\",\n",
    "    }\n",
    "    for c in unique_currencies:\n",
    "        if c == \"MXN\":\n",
    "            continue\n",
    "        exchange = ticker_map[c]\n",
    "        currencies_data[c] = fnct_get_ticker_data(exchange)['Close'] # {\"USD\":pd.Series, CAD:pd.Series}\n",
    "    df = pd.DataFrame(currencies_data)\n",
    "    df[\"MXN\"] = 1\n",
    "    return df\n",
    "\n",
    "def fnct_get_tickers_in_mxn(currencies:List[str]):\n",
    "    c_df = fnct_get_currencies_data(currencies)\n",
    "    t_data = {}\n",
    "    for ticker, coin in currencies.items():\n",
    "        t = fnct_get_ticker_data(ticker)['Adj Close']\n",
    "        t_in_mxn = fnct_convert_currency(t, c_df[coin])\n",
    "        t_data[ticker] = t_in_mxn\n",
    "    return pd.DataFrame(t_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def suma(a, b):\n",
    "    c = a + b\n",
    "    return(c)\n",
    "\n",
    "suma(5, 7)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "#tickers = [\"BIMBOA.MX\", \"CEMEXCPO.MX\", \"PE&OLES.MX\", \"AMXL.MX\", \"HERDEZ.MX\",\n",
    "#    \"BBD-B.TO\", \"RY.TO\", \"ENB.TO\", \n",
    "#    \"VWAGY\", \"SAP\", \"NSRGY\", \"EADSY\",]\n",
    "tickers = ['JCI', 'TGT', 'CMCSA', 'CPB', 'MO', 'APA', \n",
    "        'MMC', 'JPM', 'ZION', 'PSA', 'BAX', 'BMY', 'LUV', \n",
    "        'PCAR', 'TXT', 'TMO', 'DE', 'MSFT', 'HPQ', 'SEE', \n",
    "        'VZ', 'CNP', 'NI', 'T', 'BA']\n",
    "currencies = fnct_get_currency(*tickers)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'JCI': 'USD',\n",
       " 'TGT': 'USD',\n",
       " 'CMCSA': 'USD',\n",
       " 'CPB': 'USD',\n",
       " 'MO': 'USD',\n",
       " 'APA': 'USD',\n",
       " 'MMC': 'USD',\n",
       " 'JPM': 'USD',\n",
       " 'ZION': 'USD',\n",
       " 'PSA': 'USD',\n",
       " 'BAX': 'USD',\n",
       " 'BMY': 'USD',\n",
       " 'LUV': 'USD',\n",
       " 'PCAR': 'USD',\n",
       " 'TXT': 'USD',\n",
       " 'TMO': 'USD',\n",
       " 'DE': 'USD',\n",
       " 'MSFT': 'USD',\n",
       " 'HPQ': 'USD',\n",
       " 'SEE': 'USD',\n",
       " 'VZ': 'USD',\n",
       " 'CNP': 'USD',\n",
       " 'NI': 'USD',\n",
       " 'T': 'USD',\n",
       " 'BA': 'USD'}"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "currencies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "downloading data for MXN=X\n",
      "downloading data for JCI\n",
      "downloading data for TGT\n",
      "downloading data for CMCSA\n",
      "downloading data for CPB\n",
      "downloading data for MO\n",
      "downloading data for APA\n",
      "downloading data for MMC\n",
      "downloading data for JPM\n",
      "downloading data for ZION\n",
      "downloading data for PSA\n",
      "downloading data for BAX\n",
      "downloading data for BMY\n",
      "downloading data for LUV\n",
      "downloading data for PCAR\n",
      "downloading data for TXT\n",
      "downloading data for TMO\n",
      "downloading data for DE\n",
      "downloading data for MSFT\n",
      "downloading data for HPQ\n",
      "downloading data for SEE\n",
      "downloading data for VZ\n",
      "downloading data for CNP\n",
      "downloading data for NI\n",
      "downloading data for T\n",
      "downloading data for BA\n"
     ]
    }
   ],
   "source": [
    "data = fnct_get_tickers_in_mxn(currencies)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>JCI</th>\n",
       "      <th>TGT</th>\n",
       "      <th>CMCSA</th>\n",
       "      <th>CPB</th>\n",
       "      <th>MO</th>\n",
       "      <th>APA</th>\n",
       "      <th>MMC</th>\n",
       "      <th>JPM</th>\n",
       "      <th>ZION</th>\n",
       "      <th>PSA</th>\n",
       "      <th>...</th>\n",
       "      <th>TMO</th>\n",
       "      <th>DE</th>\n",
       "      <th>MSFT</th>\n",
       "      <th>HPQ</th>\n",
       "      <th>SEE</th>\n",
       "      <th>VZ</th>\n",
       "      <th>CNP</th>\n",
       "      <th>NI</th>\n",
       "      <th>T</th>\n",
       "      <th>BA</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-10-15</th>\n",
       "      <td>714.255245</td>\n",
       "      <td>1023.543871</td>\n",
       "      <td>645.642178</td>\n",
       "      <td>773.866744</td>\n",
       "      <td>934.283241</td>\n",
       "      <td>742.932267</td>\n",
       "      <td>1484.622336</td>\n",
       "      <td>1652.731954</td>\n",
       "      <td>805.957047</td>\n",
       "      <td>3572.428128</td>\n",
       "      <td>...</td>\n",
       "      <td>3603.396457</td>\n",
       "      <td>2270.376032</td>\n",
       "      <td>1403.765058</td>\n",
       "      <td>365.382892</td>\n",
       "      <td>796.077005</td>\n",
       "      <td>759.646715</td>\n",
       "      <td>479.777123</td>\n",
       "      <td>435.016377</td>\n",
       "      <td>351.170817</td>\n",
       "      <td>4688.684484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-10-16</th>\n",
       "      <td>704.915833</td>\n",
       "      <td>1010.160284</td>\n",
       "      <td>637.199932</td>\n",
       "      <td>763.747869</td>\n",
       "      <td>922.066802</td>\n",
       "      <td>733.217882</td>\n",
       "      <td>1465.209809</td>\n",
       "      <td>1631.121270</td>\n",
       "      <td>795.418566</td>\n",
       "      <td>3525.716007</td>\n",
       "      <td>...</td>\n",
       "      <td>3556.279403</td>\n",
       "      <td>2240.689199</td>\n",
       "      <td>1385.409800</td>\n",
       "      <td>360.605243</td>\n",
       "      <td>785.667714</td>\n",
       "      <td>749.713776</td>\n",
       "      <td>473.503685</td>\n",
       "      <td>429.328219</td>\n",
       "      <td>346.579000</td>\n",
       "      <td>4627.376491</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-10-17</th>\n",
       "      <td>698.864123</td>\n",
       "      <td>1015.194922</td>\n",
       "      <td>637.714839</td>\n",
       "      <td>758.910607</td>\n",
       "      <td>919.268820</td>\n",
       "      <td>737.144458</td>\n",
       "      <td>1465.356898</td>\n",
       "      <td>1635.020587</td>\n",
       "      <td>785.454137</td>\n",
       "      <td>3514.757873</td>\n",
       "      <td>...</td>\n",
       "      <td>3525.933520</td>\n",
       "      <td>2268.204522</td>\n",
       "      <td>1390.776095</td>\n",
       "      <td>358.291693</td>\n",
       "      <td>782.603612</td>\n",
       "      <td>758.055220</td>\n",
       "      <td>476.835766</td>\n",
       "      <td>432.633080</td>\n",
       "      <td>348.768084</td>\n",
       "      <td>4628.669351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-10-18</th>\n",
       "      <td>686.692908</td>\n",
       "      <td>1008.410594</td>\n",
       "      <td>630.229801</td>\n",
       "      <td>747.408831</td>\n",
       "      <td>914.408633</td>\n",
       "      <td>732.038056</td>\n",
       "      <td>1459.308117</td>\n",
       "      <td>1634.051895</td>\n",
       "      <td>785.085372</td>\n",
       "      <td>3479.797667</td>\n",
       "      <td>...</td>\n",
       "      <td>3518.906872</td>\n",
       "      <td>2258.827775</td>\n",
       "      <td>1385.060836</td>\n",
       "      <td>359.541380</td>\n",
       "      <td>775.842326</td>\n",
       "      <td>758.643824</td>\n",
       "      <td>475.557670</td>\n",
       "      <td>430.418479</td>\n",
       "      <td>342.261486</td>\n",
       "      <td>4633.764348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-10-19</th>\n",
       "      <td>703.232802</td>\n",
       "      <td>1024.960037</td>\n",
       "      <td>648.637475</td>\n",
       "      <td>750.182071</td>\n",
       "      <td>916.995152</td>\n",
       "      <td>730.461788</td>\n",
       "      <td>1486.489311</td>\n",
       "      <td>1651.895823</td>\n",
       "      <td>790.627495</td>\n",
       "      <td>3522.333408</td>\n",
       "      <td>...</td>\n",
       "      <td>3613.444004</td>\n",
       "      <td>2277.157570</td>\n",
       "      <td>1403.879097</td>\n",
       "      <td>367.034360</td>\n",
       "      <td>784.776902</td>\n",
       "      <td>774.807100</td>\n",
       "      <td>482.922257</td>\n",
       "      <td>440.012549</td>\n",
       "      <td>345.382198</td>\n",
       "      <td>4660.642696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-09</th>\n",
       "      <td>1010.303105</td>\n",
       "      <td>3051.339722</td>\n",
       "      <td>586.272267</td>\n",
       "      <td>933.989615</td>\n",
       "      <td>857.676048</td>\n",
       "      <td>851.667123</td>\n",
       "      <td>3048.335374</td>\n",
       "      <td>2122.758315</td>\n",
       "      <td>1008.901026</td>\n",
       "      <td>5681.853753</td>\n",
       "      <td>...</td>\n",
       "      <td>10487.803502</td>\n",
       "      <td>7133.613296</td>\n",
       "      <td>4691.780559</td>\n",
       "      <td>501.546221</td>\n",
       "      <td>881.711823</td>\n",
       "      <td>738.098115</td>\n",
       "      <td>536.998938</td>\n",
       "      <td>490.930413</td>\n",
       "      <td>299.245210</td>\n",
       "      <td>2599.667661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-10</th>\n",
       "      <td>1010.374964</td>\n",
       "      <td>3052.860050</td>\n",
       "      <td>580.860922</td>\n",
       "      <td>951.551140</td>\n",
       "      <td>866.605419</td>\n",
       "      <td>820.942114</td>\n",
       "      <td>3070.606905</td>\n",
       "      <td>2093.532053</td>\n",
       "      <td>996.018000</td>\n",
       "      <td>5734.830398</td>\n",
       "      <td>...</td>\n",
       "      <td>10186.302773</td>\n",
       "      <td>7172.126954</td>\n",
       "      <td>4571.313772</td>\n",
       "      <td>498.308092</td>\n",
       "      <td>893.923685</td>\n",
       "      <td>730.213764</td>\n",
       "      <td>532.406025</td>\n",
       "      <td>488.936165</td>\n",
       "      <td>297.110462</td>\n",
       "      <td>2630.125447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-11</th>\n",
       "      <td>1024.346791</td>\n",
       "      <td>3100.128925</td>\n",
       "      <td>575.480249</td>\n",
       "      <td>975.587476</td>\n",
       "      <td>889.907528</td>\n",
       "      <td>812.253835</td>\n",
       "      <td>3057.188640</td>\n",
       "      <td>2045.884417</td>\n",
       "      <td>986.824217</td>\n",
       "      <td>5817.206395</td>\n",
       "      <td>...</td>\n",
       "      <td>10049.032748</td>\n",
       "      <td>7290.419423</td>\n",
       "      <td>4522.977815</td>\n",
       "      <td>497.224575</td>\n",
       "      <td>906.160659</td>\n",
       "      <td>721.156177</td>\n",
       "      <td>533.743887</td>\n",
       "      <td>499.030479</td>\n",
       "      <td>297.170943</td>\n",
       "      <td>2640.025796</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-12</th>\n",
       "      <td>1023.945471</td>\n",
       "      <td>3093.306709</td>\n",
       "      <td>575.680910</td>\n",
       "      <td>985.018313</td>\n",
       "      <td>897.933783</td>\n",
       "      <td>817.671545</td>\n",
       "      <td>3049.764481</td>\n",
       "      <td>2078.992620</td>\n",
       "      <td>971.975669</td>\n",
       "      <td>5757.009717</td>\n",
       "      <td>...</td>\n",
       "      <td>10046.223888</td>\n",
       "      <td>7247.880535</td>\n",
       "      <td>4529.800032</td>\n",
       "      <td>495.418672</td>\n",
       "      <td>902.548852</td>\n",
       "      <td>715.939165</td>\n",
       "      <td>512.675027</td>\n",
       "      <td>485.385892</td>\n",
       "      <td>293.559136</td>\n",
       "      <td>2616.950219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-10-13</th>\n",
       "      <td>1044.656313</td>\n",
       "      <td>3095.000320</td>\n",
       "      <td>603.412647</td>\n",
       "      <td>1007.686126</td>\n",
       "      <td>914.361536</td>\n",
       "      <td>834.825783</td>\n",
       "      <td>3101.395302</td>\n",
       "      <td>2176.478097</td>\n",
       "      <td>1006.786889</td>\n",
       "      <td>5783.294815</td>\n",
       "      <td>...</td>\n",
       "      <td>10231.736328</td>\n",
       "      <td>7313.293241</td>\n",
       "      <td>4689.812122</td>\n",
       "      <td>519.980047</td>\n",
       "      <td>921.056111</td>\n",
       "      <td>727.512399</td>\n",
       "      <td>518.281399</td>\n",
       "      <td>500.096089</td>\n",
       "      <td>300.657175</td>\n",
       "      <td>2654.655891</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1451 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    JCI          TGT       CMCSA          CPB          MO  \\\n",
       "Date                                                                        \n",
       "2017-10-15   714.255245  1023.543871  645.642178   773.866744  934.283241   \n",
       "2017-10-16   704.915833  1010.160284  637.199932   763.747869  922.066802   \n",
       "2017-10-17   698.864123  1015.194922  637.714839   758.910607  919.268820   \n",
       "2017-10-18   686.692908  1008.410594  630.229801   747.408831  914.408633   \n",
       "2017-10-19   703.232802  1024.960037  648.637475   750.182071  916.995152   \n",
       "...                 ...          ...         ...          ...         ...   \n",
       "2022-10-09  1010.303105  3051.339722  586.272267   933.989615  857.676048   \n",
       "2022-10-10  1010.374964  3052.860050  580.860922   951.551140  866.605419   \n",
       "2022-10-11  1024.346791  3100.128925  575.480249   975.587476  889.907528   \n",
       "2022-10-12  1023.945471  3093.306709  575.680910   985.018313  897.933783   \n",
       "2022-10-13  1044.656313  3095.000320  603.412647  1007.686126  914.361536   \n",
       "\n",
       "                   APA          MMC          JPM         ZION          PSA  \\\n",
       "Date                                                                         \n",
       "2017-10-15  742.932267  1484.622336  1652.731954   805.957047  3572.428128   \n",
       "2017-10-16  733.217882  1465.209809  1631.121270   795.418566  3525.716007   \n",
       "2017-10-17  737.144458  1465.356898  1635.020587   785.454137  3514.757873   \n",
       "2017-10-18  732.038056  1459.308117  1634.051895   785.085372  3479.797667   \n",
       "2017-10-19  730.461788  1486.489311  1651.895823   790.627495  3522.333408   \n",
       "...                ...          ...          ...          ...          ...   \n",
       "2022-10-09  851.667123  3048.335374  2122.758315  1008.901026  5681.853753   \n",
       "2022-10-10  820.942114  3070.606905  2093.532053   996.018000  5734.830398   \n",
       "2022-10-11  812.253835  3057.188640  2045.884417   986.824217  5817.206395   \n",
       "2022-10-12  817.671545  3049.764481  2078.992620   971.975669  5757.009717   \n",
       "2022-10-13  834.825783  3101.395302  2176.478097  1006.786889  5783.294815   \n",
       "\n",
       "            ...           TMO           DE         MSFT         HPQ  \\\n",
       "Date        ...                                                       \n",
       "2017-10-15  ...   3603.396457  2270.376032  1403.765058  365.382892   \n",
       "2017-10-16  ...   3556.279403  2240.689199  1385.409800  360.605243   \n",
       "2017-10-17  ...   3525.933520  2268.204522  1390.776095  358.291693   \n",
       "2017-10-18  ...   3518.906872  2258.827775  1385.060836  359.541380   \n",
       "2017-10-19  ...   3613.444004  2277.157570  1403.879097  367.034360   \n",
       "...         ...           ...          ...          ...         ...   \n",
       "2022-10-09  ...  10487.803502  7133.613296  4691.780559  501.546221   \n",
       "2022-10-10  ...  10186.302773  7172.126954  4571.313772  498.308092   \n",
       "2022-10-11  ...  10049.032748  7290.419423  4522.977815  497.224575   \n",
       "2022-10-12  ...  10046.223888  7247.880535  4529.800032  495.418672   \n",
       "2022-10-13  ...  10231.736328  7313.293241  4689.812122  519.980047   \n",
       "\n",
       "                   SEE          VZ         CNP          NI           T  \\\n",
       "Date                                                                     \n",
       "2017-10-15  796.077005  759.646715  479.777123  435.016377  351.170817   \n",
       "2017-10-16  785.667714  749.713776  473.503685  429.328219  346.579000   \n",
       "2017-10-17  782.603612  758.055220  476.835766  432.633080  348.768084   \n",
       "2017-10-18  775.842326  758.643824  475.557670  430.418479  342.261486   \n",
       "2017-10-19  784.776902  774.807100  482.922257  440.012549  345.382198   \n",
       "...                ...         ...         ...         ...         ...   \n",
       "2022-10-09  881.711823  738.098115  536.998938  490.930413  299.245210   \n",
       "2022-10-10  893.923685  730.213764  532.406025  488.936165  297.110462   \n",
       "2022-10-11  906.160659  721.156177  533.743887  499.030479  297.170943   \n",
       "2022-10-12  902.548852  715.939165  512.675027  485.385892  293.559136   \n",
       "2022-10-13  921.056111  727.512399  518.281399  500.096089  300.657175   \n",
       "\n",
       "                     BA  \n",
       "Date                     \n",
       "2017-10-15  4688.684484  \n",
       "2017-10-16  4627.376491  \n",
       "2017-10-17  4628.669351  \n",
       "2017-10-18  4633.764348  \n",
       "2017-10-19  4660.642696  \n",
       "...                 ...  \n",
       "2022-10-09  2599.667661  \n",
       "2022-10-10  2630.125447  \n",
       "2022-10-11  2640.025796  \n",
       "2022-10-12  2616.950219  \n",
       "2022-10-13  2654.655891  \n",
       "\n",
       "[1451 rows x 25 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "pct_change_df = data.pct_change()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "JCI      0.109256\n",
      "TGT      0.280518\n",
      "CMCSA    0.027023\n",
      "CPB      0.087605\n",
      "MO       0.029266\n",
      "APA      0.277156\n",
      "MMC      0.166537\n",
      "JPM      0.095766\n",
      "ZION     0.104422\n",
      "PSA      0.119128\n",
      "BAX      0.027860\n",
      "BMY      0.081744\n",
      "LUV     -0.023232\n",
      "PCAR     0.112026\n",
      "TXT      0.105101\n",
      "TMO      0.243149\n",
      "DE       0.290230\n",
      "MSFT     0.285804\n",
      "HPQ      0.131566\n",
      "SEE      0.079428\n",
      "VZ       0.014107\n",
      "CNP      0.059862\n",
      "NI       0.060275\n",
      "T        0.002236\n",
      "BA       0.006271\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "ann_mean_return = ((1 + pct_change_df.mean())**252)-1\n",
    "print(ann_mean_return)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "JCI      0.274101\n",
      "TGT      0.330868\n",
      "CMCSA    0.277727\n",
      "CPB      0.276323\n",
      "MO       0.255147\n",
      "APA      0.652054\n",
      "MMC      0.228836\n",
      "JPM      0.297134\n",
      "ZION     0.350312\n",
      "PSA      0.240017\n",
      "BAX      0.252432\n",
      "BMY      0.240661\n",
      "LUV      0.365952\n",
      "PCAR     0.264337\n",
      "TXT      0.362133\n",
      "TMO      0.270039\n",
      "DE       0.321336\n",
      "MSFT     0.290048\n",
      "HPQ      0.351853\n",
      "SEE      0.322243\n",
      "VZ       0.207960\n",
      "CNP      0.298639\n",
      "NI       0.262208\n",
      "T        0.242044\n",
      "BA       0.458872\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "ann_stdev = pct_change_df.std() * (252**(1/2))\n",
    "print(ann_stdev)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>JCI</th>\n",
       "      <th>TGT</th>\n",
       "      <th>CMCSA</th>\n",
       "      <th>CPB</th>\n",
       "      <th>MO</th>\n",
       "      <th>APA</th>\n",
       "      <th>MMC</th>\n",
       "      <th>JPM</th>\n",
       "      <th>ZION</th>\n",
       "      <th>PSA</th>\n",
       "      <th>...</th>\n",
       "      <th>TMO</th>\n",
       "      <th>DE</th>\n",
       "      <th>MSFT</th>\n",
       "      <th>HPQ</th>\n",
       "      <th>SEE</th>\n",
       "      <th>VZ</th>\n",
       "      <th>CNP</th>\n",
       "      <th>NI</th>\n",
       "      <th>T</th>\n",
       "      <th>BA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>JCI</th>\n",
       "      <td>0.000298</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.000149</td>\n",
       "      <td>0.000076</td>\n",
       "      <td>0.000116</td>\n",
       "      <td>0.000236</td>\n",
       "      <td>0.000148</td>\n",
       "      <td>0.000205</td>\n",
       "      <td>0.000206</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000127</td>\n",
       "      <td>0.000199</td>\n",
       "      <td>0.000153</td>\n",
       "      <td>0.000196</td>\n",
       "      <td>0.000177</td>\n",
       "      <td>0.000090</td>\n",
       "      <td>0.000152</td>\n",
       "      <td>0.000115</td>\n",
       "      <td>0.000128</td>\n",
       "      <td>0.000244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TGT</th>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.000434</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000115</td>\n",
       "      <td>0.000126</td>\n",
       "      <td>0.000133</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000138</td>\n",
       "      <td>0.000100</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.000157</td>\n",
       "      <td>0.000170</td>\n",
       "      <td>0.000166</td>\n",
       "      <td>0.000126</td>\n",
       "      <td>0.000105</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.000155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CMCSA</th>\n",
       "      <td>0.000149</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000306</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.000113</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.000184</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.000103</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000111</td>\n",
       "      <td>0.000162</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>0.000169</td>\n",
       "      <td>0.000139</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000147</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000152</td>\n",
       "      <td>0.000199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CPB</th>\n",
       "      <td>0.000076</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.000303</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>-0.000016</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.000064</td>\n",
       "      <td>0.000040</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.000051</td>\n",
       "      <td>0.000086</td>\n",
       "      <td>0.000049</td>\n",
       "      <td>0.000068</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>0.000094</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>0.000095</td>\n",
       "      <td>0.000016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MO</th>\n",
       "      <td>0.000116</td>\n",
       "      <td>0.000115</td>\n",
       "      <td>0.000113</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>0.000258</td>\n",
       "      <td>0.000150</td>\n",
       "      <td>0.000099</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000133</td>\n",
       "      <td>0.000098</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.000128</td>\n",
       "      <td>0.000095</td>\n",
       "      <td>0.000114</td>\n",
       "      <td>0.000116</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000118</td>\n",
       "      <td>0.000114</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>APA</th>\n",
       "      <td>0.000236</td>\n",
       "      <td>0.000126</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>-0.000016</td>\n",
       "      <td>0.000150</td>\n",
       "      <td>0.001687</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000351</td>\n",
       "      <td>0.000401</td>\n",
       "      <td>0.000039</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000104</td>\n",
       "      <td>0.000318</td>\n",
       "      <td>0.000179</td>\n",
       "      <td>0.000343</td>\n",
       "      <td>0.000227</td>\n",
       "      <td>0.000050</td>\n",
       "      <td>0.000236</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000165</td>\n",
       "      <td>0.000526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MMC</th>\n",
       "      <td>0.000148</td>\n",
       "      <td>0.000133</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.000099</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000208</td>\n",
       "      <td>0.000165</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000115</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000146</td>\n",
       "      <td>0.000166</td>\n",
       "      <td>0.000149</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>0.000152</td>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>JPM</th>\n",
       "      <td>0.000205</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000184</td>\n",
       "      <td>0.000064</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000351</td>\n",
       "      <td>0.000165</td>\n",
       "      <td>0.000350</td>\n",
       "      <td>0.000326</td>\n",
       "      <td>0.000097</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000119</td>\n",
       "      <td>0.000234</td>\n",
       "      <td>0.000176</td>\n",
       "      <td>0.000225</td>\n",
       "      <td>0.000199</td>\n",
       "      <td>0.000110</td>\n",
       "      <td>0.000189</td>\n",
       "      <td>0.000137</td>\n",
       "      <td>0.000162</td>\n",
       "      <td>0.000324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZION</th>\n",
       "      <td>0.000206</td>\n",
       "      <td>0.000138</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.000040</td>\n",
       "      <td>0.000133</td>\n",
       "      <td>0.000401</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000326</td>\n",
       "      <td>0.000487</td>\n",
       "      <td>0.000070</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.000240</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>0.000230</td>\n",
       "      <td>0.000192</td>\n",
       "      <td>0.000099</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.000123</td>\n",
       "      <td>0.000161</td>\n",
       "      <td>0.000348</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PSA</th>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000100</td>\n",
       "      <td>0.000103</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000098</td>\n",
       "      <td>0.000039</td>\n",
       "      <td>0.000115</td>\n",
       "      <td>0.000097</td>\n",
       "      <td>0.000070</td>\n",
       "      <td>0.000229</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000104</td>\n",
       "      <td>0.000103</td>\n",
       "      <td>0.000118</td>\n",
       "      <td>0.000091</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>0.000095</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>0.000147</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>0.000121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BAX</th>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000117</td>\n",
       "      <td>0.000134</td>\n",
       "      <td>0.000097</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>0.000101</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000132</td>\n",
       "      <td>0.000116</td>\n",
       "      <td>0.000098</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.000148</td>\n",
       "      <td>0.000118</td>\n",
       "      <td>0.000089</td>\n",
       "      <td>0.000103</td>\n",
       "      <td>0.000123</td>\n",
       "      <td>0.000124</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BMY</th>\n",
       "      <td>0.000099</td>\n",
       "      <td>0.000100</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>0.000091</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000113</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>0.000084</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000121</td>\n",
       "      <td>0.000117</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000087</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000097</td>\n",
       "      <td>0.000113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LUV</th>\n",
       "      <td>0.000213</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000193</td>\n",
       "      <td>0.000047</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.000322</td>\n",
       "      <td>0.000143</td>\n",
       "      <td>0.000262</td>\n",
       "      <td>0.000294</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000090</td>\n",
       "      <td>0.000235</td>\n",
       "      <td>0.000157</td>\n",
       "      <td>0.000225</td>\n",
       "      <td>0.000175</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>0.000160</td>\n",
       "      <td>0.000426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PCAR</th>\n",
       "      <td>0.000180</td>\n",
       "      <td>0.000138</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000084</td>\n",
       "      <td>0.000117</td>\n",
       "      <td>0.000233</td>\n",
       "      <td>0.000134</td>\n",
       "      <td>0.000200</td>\n",
       "      <td>0.000202</td>\n",
       "      <td>0.000087</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000118</td>\n",
       "      <td>0.000214</td>\n",
       "      <td>0.000158</td>\n",
       "      <td>0.000185</td>\n",
       "      <td>0.000165</td>\n",
       "      <td>0.000091</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.000100</td>\n",
       "      <td>0.000128</td>\n",
       "      <td>0.000233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TXT</th>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.000163</td>\n",
       "      <td>0.000198</td>\n",
       "      <td>0.000051</td>\n",
       "      <td>0.000151</td>\n",
       "      <td>0.000433</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000303</td>\n",
       "      <td>0.000338</td>\n",
       "      <td>0.000119</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.000284</td>\n",
       "      <td>0.000192</td>\n",
       "      <td>0.000267</td>\n",
       "      <td>0.000226</td>\n",
       "      <td>0.000104</td>\n",
       "      <td>0.000214</td>\n",
       "      <td>0.000156</td>\n",
       "      <td>0.000174</td>\n",
       "      <td>0.000443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TMO</th>\n",
       "      <td>0.000127</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.000111</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.000080</td>\n",
       "      <td>0.000104</td>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.000119</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.000104</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000289</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>0.000198</td>\n",
       "      <td>0.000139</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>0.000089</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.000122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DE</th>\n",
       "      <td>0.000199</td>\n",
       "      <td>0.000157</td>\n",
       "      <td>0.000162</td>\n",
       "      <td>0.000051</td>\n",
       "      <td>0.000128</td>\n",
       "      <td>0.000318</td>\n",
       "      <td>0.000146</td>\n",
       "      <td>0.000234</td>\n",
       "      <td>0.000240</td>\n",
       "      <td>0.000103</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>0.000410</td>\n",
       "      <td>0.000173</td>\n",
       "      <td>0.000245</td>\n",
       "      <td>0.000191</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000164</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.000144</td>\n",
       "      <td>0.000322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MSFT</th>\n",
       "      <td>0.000153</td>\n",
       "      <td>0.000170</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>0.000086</td>\n",
       "      <td>0.000095</td>\n",
       "      <td>0.000179</td>\n",
       "      <td>0.000166</td>\n",
       "      <td>0.000176</td>\n",
       "      <td>0.000129</td>\n",
       "      <td>0.000118</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000198</td>\n",
       "      <td>0.000173</td>\n",
       "      <td>0.000334</td>\n",
       "      <td>0.000208</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000097</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>0.000124</td>\n",
       "      <td>0.000110</td>\n",
       "      <td>0.000214</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HPQ</th>\n",
       "      <td>0.000196</td>\n",
       "      <td>0.000166</td>\n",
       "      <td>0.000169</td>\n",
       "      <td>0.000049</td>\n",
       "      <td>0.000114</td>\n",
       "      <td>0.000343</td>\n",
       "      <td>0.000149</td>\n",
       "      <td>0.000225</td>\n",
       "      <td>0.000230</td>\n",
       "      <td>0.000091</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000139</td>\n",
       "      <td>0.000245</td>\n",
       "      <td>0.000208</td>\n",
       "      <td>0.000491</td>\n",
       "      <td>0.000198</td>\n",
       "      <td>0.000092</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.000133</td>\n",
       "      <td>0.000296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SEE</th>\n",
       "      <td>0.000177</td>\n",
       "      <td>0.000126</td>\n",
       "      <td>0.000139</td>\n",
       "      <td>0.000068</td>\n",
       "      <td>0.000116</td>\n",
       "      <td>0.000227</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000199</td>\n",
       "      <td>0.000192</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>0.000191</td>\n",
       "      <td>0.000136</td>\n",
       "      <td>0.000198</td>\n",
       "      <td>0.000412</td>\n",
       "      <td>0.000101</td>\n",
       "      <td>0.000167</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000114</td>\n",
       "      <td>0.000234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VZ</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>0.000105</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000050</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>0.000110</td>\n",
       "      <td>0.000099</td>\n",
       "      <td>0.000095</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000089</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000097</td>\n",
       "      <td>0.000092</td>\n",
       "      <td>0.000101</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000121</td>\n",
       "      <td>0.000137</td>\n",
       "      <td>0.000091</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CNP</th>\n",
       "      <td>0.000152</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.000147</td>\n",
       "      <td>0.000094</td>\n",
       "      <td>0.000118</td>\n",
       "      <td>0.000236</td>\n",
       "      <td>0.000152</td>\n",
       "      <td>0.000189</td>\n",
       "      <td>0.000172</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000107</td>\n",
       "      <td>0.000164</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>0.000159</td>\n",
       "      <td>0.000167</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000354</td>\n",
       "      <td>0.000224</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NI</th>\n",
       "      <td>0.000115</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000106</td>\n",
       "      <td>0.000114</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.000137</td>\n",
       "      <td>0.000123</td>\n",
       "      <td>0.000147</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000102</td>\n",
       "      <td>0.000130</td>\n",
       "      <td>0.000124</td>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000121</td>\n",
       "      <td>0.000224</td>\n",
       "      <td>0.000273</td>\n",
       "      <td>0.000125</td>\n",
       "      <td>0.000161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>T</th>\n",
       "      <td>0.000128</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.000152</td>\n",
       "      <td>0.000095</td>\n",
       "      <td>0.000120</td>\n",
       "      <td>0.000165</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>0.000162</td>\n",
       "      <td>0.000161</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000088</td>\n",
       "      <td>0.000144</td>\n",
       "      <td>0.000110</td>\n",
       "      <td>0.000133</td>\n",
       "      <td>0.000114</td>\n",
       "      <td>0.000137</td>\n",
       "      <td>0.000135</td>\n",
       "      <td>0.000125</td>\n",
       "      <td>0.000232</td>\n",
       "      <td>0.000168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BA</th>\n",
       "      <td>0.000244</td>\n",
       "      <td>0.000155</td>\n",
       "      <td>0.000199</td>\n",
       "      <td>0.000016</td>\n",
       "      <td>0.000158</td>\n",
       "      <td>0.000526</td>\n",
       "      <td>0.000182</td>\n",
       "      <td>0.000324</td>\n",
       "      <td>0.000348</td>\n",
       "      <td>0.000121</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.000322</td>\n",
       "      <td>0.000214</td>\n",
       "      <td>0.000296</td>\n",
       "      <td>0.000234</td>\n",
       "      <td>0.000091</td>\n",
       "      <td>0.000256</td>\n",
       "      <td>0.000161</td>\n",
       "      <td>0.000168</td>\n",
       "      <td>0.000836</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>25 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            JCI       TGT     CMCSA       CPB        MO       APA       MMC  \\\n",
       "JCI    0.000298  0.000140  0.000149  0.000076  0.000116  0.000236  0.000148   \n",
       "TGT    0.000140  0.000434  0.000135  0.000107  0.000115  0.000126  0.000133   \n",
       "CMCSA  0.000149  0.000135  0.000306  0.000080  0.000113  0.000171  0.000130   \n",
       "CPB    0.000076  0.000107  0.000080  0.000303  0.000106 -0.000016  0.000080   \n",
       "MO     0.000116  0.000115  0.000113  0.000106  0.000258  0.000150  0.000099   \n",
       "APA    0.000236  0.000126  0.000171 -0.000016  0.000150  0.001687  0.000159   \n",
       "MMC    0.000148  0.000133  0.000130  0.000080  0.000099  0.000159  0.000208   \n",
       "JPM    0.000205  0.000145  0.000184  0.000064  0.000136  0.000351  0.000165   \n",
       "ZION   0.000206  0.000138  0.000172  0.000040  0.000133  0.000401  0.000135   \n",
       "PSA    0.000107  0.000100  0.000103  0.000102  0.000098  0.000039  0.000115   \n",
       "BAX    0.000108  0.000117  0.000134  0.000097  0.000096  0.000101  0.000108   \n",
       "BMY    0.000099  0.000100  0.000107  0.000081  0.000093  0.000091  0.000108   \n",
       "LUV    0.000213  0.000136  0.000193  0.000047  0.000140  0.000322  0.000143   \n",
       "PCAR   0.000180  0.000138  0.000145  0.000084  0.000117  0.000233  0.000134   \n",
       "TXT    0.000247  0.000163  0.000198  0.000051  0.000151  0.000433  0.000159   \n",
       "TMO    0.000127  0.000140  0.000111  0.000081  0.000080  0.000104  0.000145   \n",
       "DE     0.000199  0.000157  0.000162  0.000051  0.000128  0.000318  0.000146   \n",
       "MSFT   0.000153  0.000170  0.000171  0.000086  0.000095  0.000179  0.000166   \n",
       "HPQ    0.000196  0.000166  0.000169  0.000049  0.000114  0.000343  0.000149   \n",
       "SEE    0.000177  0.000126  0.000139  0.000068  0.000116  0.000227  0.000136   \n",
       "VZ     0.000090  0.000105  0.000120  0.000106  0.000102  0.000050  0.000093   \n",
       "CNP    0.000152  0.000112  0.000147  0.000094  0.000118  0.000236  0.000152   \n",
       "NI     0.000115  0.000112  0.000135  0.000106  0.000114  0.000102  0.000122   \n",
       "T      0.000128  0.000112  0.000152  0.000095  0.000120  0.000165  0.000108   \n",
       "BA     0.000244  0.000155  0.000199  0.000016  0.000158  0.000526  0.000182   \n",
       "\n",
       "            JPM      ZION       PSA  ...       TMO        DE      MSFT  \\\n",
       "JCI    0.000205  0.000206  0.000107  ...  0.000127  0.000199  0.000153   \n",
       "TGT    0.000145  0.000138  0.000100  ...  0.000140  0.000157  0.000170   \n",
       "CMCSA  0.000184  0.000172  0.000103  ...  0.000111  0.000162  0.000171   \n",
       "CPB    0.000064  0.000040  0.000102  ...  0.000081  0.000051  0.000086   \n",
       "MO     0.000136  0.000133  0.000098  ...  0.000080  0.000128  0.000095   \n",
       "APA    0.000351  0.000401  0.000039  ...  0.000104  0.000318  0.000179   \n",
       "MMC    0.000165  0.000135  0.000115  ...  0.000145  0.000146  0.000166   \n",
       "JPM    0.000350  0.000326  0.000097  ...  0.000119  0.000234  0.000176   \n",
       "ZION   0.000326  0.000487  0.000070  ...  0.000081  0.000240  0.000129   \n",
       "PSA    0.000097  0.000070  0.000229  ...  0.000104  0.000103  0.000118   \n",
       "BAX    0.000132  0.000116  0.000098  ...  0.000145  0.000122  0.000148   \n",
       "BMY    0.000113  0.000096  0.000084  ...  0.000121  0.000117  0.000120   \n",
       "LUV    0.000262  0.000294  0.000093  ...  0.000090  0.000235  0.000157   \n",
       "PCAR   0.000200  0.000202  0.000087  ...  0.000118  0.000214  0.000158   \n",
       "TXT    0.000303  0.000338  0.000119  ...  0.000130  0.000284  0.000192   \n",
       "TMO    0.000119  0.000081  0.000104  ...  0.000289  0.000129  0.000198   \n",
       "DE     0.000234  0.000240  0.000103  ...  0.000129  0.000410  0.000173   \n",
       "MSFT   0.000176  0.000129  0.000118  ...  0.000198  0.000173  0.000334   \n",
       "HPQ    0.000225  0.000230  0.000091  ...  0.000139  0.000245  0.000208   \n",
       "SEE    0.000199  0.000192  0.000106  ...  0.000096  0.000191  0.000136   \n",
       "VZ     0.000110  0.000099  0.000095  ...  0.000089  0.000102  0.000097   \n",
       "CNP    0.000189  0.000172  0.000141  ...  0.000107  0.000164  0.000141   \n",
       "NI     0.000137  0.000123  0.000147  ...  0.000102  0.000130  0.000124   \n",
       "T      0.000162  0.000161  0.000093  ...  0.000088  0.000144  0.000110   \n",
       "BA     0.000324  0.000348  0.000121  ...  0.000122  0.000322  0.000214   \n",
       "\n",
       "            HPQ       SEE        VZ       CNP        NI         T        BA  \n",
       "JCI    0.000196  0.000177  0.000090  0.000152  0.000115  0.000128  0.000244  \n",
       "TGT    0.000166  0.000126  0.000105  0.000112  0.000112  0.000112  0.000155  \n",
       "CMCSA  0.000169  0.000139  0.000120  0.000147  0.000135  0.000152  0.000199  \n",
       "CPB    0.000049  0.000068  0.000106  0.000094  0.000106  0.000095  0.000016  \n",
       "MO     0.000114  0.000116  0.000102  0.000118  0.000114  0.000120  0.000158  \n",
       "APA    0.000343  0.000227  0.000050  0.000236  0.000102  0.000165  0.000526  \n",
       "MMC    0.000149  0.000136  0.000093  0.000152  0.000122  0.000108  0.000182  \n",
       "JPM    0.000225  0.000199  0.000110  0.000189  0.000137  0.000162  0.000324  \n",
       "ZION   0.000230  0.000192  0.000099  0.000172  0.000123  0.000161  0.000348  \n",
       "PSA    0.000091  0.000106  0.000095  0.000141  0.000147  0.000093  0.000121  \n",
       "BAX    0.000118  0.000089  0.000103  0.000123  0.000124  0.000107  0.000111  \n",
       "BMY    0.000102  0.000107  0.000087  0.000108  0.000102  0.000097  0.000113  \n",
       "LUV    0.000225  0.000175  0.000096  0.000180  0.000129  0.000160  0.000426  \n",
       "PCAR   0.000185  0.000165  0.000091  0.000130  0.000100  0.000128  0.000233  \n",
       "TXT    0.000267  0.000226  0.000104  0.000214  0.000156  0.000174  0.000443  \n",
       "TMO    0.000139  0.000096  0.000089  0.000107  0.000102  0.000088  0.000122  \n",
       "DE     0.000245  0.000191  0.000102  0.000164  0.000130  0.000144  0.000322  \n",
       "MSFT   0.000208  0.000136  0.000097  0.000141  0.000124  0.000110  0.000214  \n",
       "HPQ    0.000491  0.000198  0.000092  0.000159  0.000122  0.000133  0.000296  \n",
       "SEE    0.000198  0.000412  0.000101  0.000167  0.000120  0.000114  0.000234  \n",
       "VZ     0.000092  0.000101  0.000172  0.000108  0.000121  0.000137  0.000091  \n",
       "CNP    0.000159  0.000167  0.000108  0.000354  0.000224  0.000135  0.000256  \n",
       "NI     0.000122  0.000120  0.000121  0.000224  0.000273  0.000125  0.000161  \n",
       "T      0.000133  0.000114  0.000137  0.000135  0.000125  0.000232  0.000168  \n",
       "BA     0.000296  0.000234  0.000091  0.000256  0.000161  0.000168  0.000836  \n",
       "\n",
       "[25 rows x 25 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pct_change_df.cov()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,\n",
       "       0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,\n",
       "       0.04, 0.04, 0.04])"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "weight = np.full_like(ann_stdev,1/len(ann_stdev))\n",
    "weight"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.012627474449949919"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "portaf_ann_stdev = ((weight @ pct_change_df.cov()) @ weight.T) ** (1/2)\n",
    "portaf_ann_stdev"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'pct_change' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_40320\\2653027395.py\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mpct_change\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m: name 'pct_change' is not defined"
     ]
    }
   ],
   "source": [
    "pct_change"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ticker = 'CADMXN=X'\n",
    "data_source = 'yahoo'\n",
    "goog = DataReader(ticker, data_source, five_years_ago, now)\n",
    "goog"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ticker = 'CEMEXCPO.MX'\n",
    "data_source = 'yahoo'\n",
    "cemex = DataReader(ticker, data_source, five_years_ago, now)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ticker = 'MXN=X'\n",
    "data_source = 'yahoo'\n",
    "mxn = DataReader(ticker, data_source, five_years_ago, now)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame({\"goog\":goog.Close, \"cemex\":cemex.Close, 'mxn':mxn['Close']})\n",
    "# drop rows where all columns in subset are NA\n",
    "df = df.dropna(axis=0, how='all', subset=('goog', 'cemex'))\n",
    "# fill with the value of the previous date's values\n",
    "df = df.fillna(method='ffill')\n",
    "# in case there are empty rows at the beginning, fill with following date's values\n",
    "df = df.fillna(method='bfill')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Add a column with google prices in MXN\n",
    "df['goog_mxn'] = df.goog * df.mxn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.plot(y=['goog_mxn', \"cemex\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.cov()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.std() * np.sqrt(252)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['goog_mxn_change'] = df.goog_mxn.pct_change()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_excel('example.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.12 ('progfin')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "c8d1524f2d7978f0af6c708b78e553d377be34eeed69628e4260b333d94b895a"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
